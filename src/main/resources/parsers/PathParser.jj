options {
    STATIC = false;
}


PARSER_BEGIN(Parser)
package com.example.dependencyanalyzer;
import java.util.ArrayList;import java.util.List;
    public class Parser {
        private String module;
        private List<String> imports = new ArrayList<>();

        public List<String> getImports() {
            return imports;
        }

        private void addImport(String importName) {
            imports.add(importName);
        }
    }
PARSER_END(Parser)

SKIP : {
< ~[] >
}

SPECIAL_TOKEN : {
    < DIGIT: (["0"-"9"])+ > |
    < LETTER: (["a"-"z", "A"-"Z"]) >
}

SKIP : {
    < BEGIN_MODULE: "from" (" ")+> : FROM |
    < BEGIN_TARGET: "import" (" ")+> : IMPORT
}

TOKEN : {
    < BEGIN_COMMENT: "\"\"\""> : COMMENT
}

<COMMENT> TOKEN : {
    < ANY:  ~[] > |
    < END_COMMENT: "\"\"\""> : DEFAULT

}

<FROM> SKIP : {
    < BEGIN_IMPORT: "import" (" ")+> : IMPORT
}

<FROM> TOKEN : {
    < MODULE: (<LETTER> | "_") (<LETTER> | <DIGIT> | "_" | ".")* > |
    < EOM: (" "|"\t")+>
}

<IMPORT> TOKEN : {
    < TARGET: (<LETTER> | "_") (<LETTER> | <DIGIT> | "_" | ".")* > |
    < EOT: "\n" | "\r" | "\r\n" | " "> : DEFAULT |
    < NEXT: ","(" ")*>
}

void Start() :
{}
{
    (Comment() | From() | Import())*
    <EOF>
}
void Comment() :
{}
{
    <BEGIN_COMMENT>
    (<ANY>)*
    <END_COMMENT>
}
void From() :
{}
{
    <MODULE>
    {
        module = token.image.replace('.', '/');
    }
    <EOM>
    <TARGET>{addImport(module + "/" + token.image);}
    (<EOT> | <NEXT>Import())+
}
void Import() :
{}
{
    <TARGET>
    {
        addImport(token.image.replace('.', '/'));
    }
    (<EOT> | <NEXT>Import())+
}
